# This workflow builds a Java project with Gradle and caches dependencies to improve execution time.
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write  # Updated to 'write' if required for actions/checkout or artifact upload

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Set up Gradle with caching
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: '7.3' # Specify a Gradle version if needed

    # Build with Gradle
    - name: Build with Gradle
      run: |
        chmod +x gradlew
        ./gradlew build --stacktrace
        echo ">>---------------"
        find . -name "*.apk"
        echo "---------------<<"

    # Find and copy the APK file
    - name: Find and copy APK
      run: |
        file=$(find . -name "*.apk" | head -n 1)
        if [[ -n "$file" ]]; then
          cp "$file" Webview.apk
        else
          echo "No APK found."
          exit 1
        fi

    # Upload the APK file
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Webview.apk
        path: Webview.apk
        if-no-files-found: error
